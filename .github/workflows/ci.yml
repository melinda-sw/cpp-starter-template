name: GitHub CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  linux:
    runs-on: ubuntu-24.04
    
    env:
      GCC_VER: 14
      CLANG_VER: 20
      
    strategy:
      fail-fast: false
      matrix:
        profile: [gcc-amd64-linux-hardened, clang-libstdcxx-amd64-linux-hardened, clang-libcxx-amd64-linux-hardened]
        
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install gcc-${{ env.GCC_VER }}
        uses: ./.github/actions/install-gcc
        with:
          version: ${{ env.GCC_VER }}

      - name: Install clang-${{ env.CLANG_VER }}
        if: contains(matrix.profile, 'clang')
        uses: ./.github/actions/install-clang 
        with:
          version: ${{ env.CLANG_VER }}

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: ${{ matrix.profile }}

      - name: Configure CMake
        run: |
          cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON --preset release

      - name: Build
        run: |
          cmake --build --preset release
      
      - name: Test
        run: |
          ctest --preset release

  windows-msvc:
    runs-on: windows-2025

    strategy:
      fail-fast: false
      matrix:
        profile: [msvc-amd64-windows-hardened]

    steps:
      - name: Initialize
        run: |
          git config --global core.autocrlf input
          
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: ${{ matrix.profile }}

      - name: Configure CMake
        run: |
          cmake -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON  --preset default
          
      - name: Build
        run: |
          cmake --build --preset multi-release

      - name: Test
        run: |
          ctest --preset multi-release
          
  windows-clang:
    runs-on: windows-2025
    
    env:
      CLANG_VER: 20
      
    strategy:
      fail-fast: false
      matrix:
        profile: [clang-amd64-windows-hardened]

    steps:
      - name: Initialize
        run: |
          git config --global core.autocrlf input
          
      - name: Checkout repository from github
        uses: actions/checkout@v4

      - name: Install Clang and Ninja
        run: |
          choco install ninja
          choco install llvm --version 20.1.2 -y
          
      - name: Setup Conan
        id: setup-conan
        uses: ./.github/actions/setup-conan
        with:
          profile: ${{ matrix.profile }}

      - name: Configure CMake
        run: |
          cmake -G=Ninja -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON --preset release
          
      - name: Build
        run: |
          cmake --build --preset release

      - name: Test
        run: |
          ctest --preset release
